//===== rAthena Script ======================================= 
//= Warper
//===== Description: ========================================= 
//= A complete - but very condensed - warper script.
//===== Additional Comments: =================================
//= 1.0 Initial script By [Euphy].
//= 1.1 Added missing duplicates and fixed coordinates.
//=     Some coordinates written by [Tekno-Kanix] and [ToastOfDoom].
//= 1.2 Added new episodes and simplified functions.
//= 1.3 Added Renewal checks and Instances menu.
//=     Aligned coordinates with @go.
//= 1.4 Added new Guild Dungeons.
//= 1.4a Slight edits.
//= 1.4b Added Wolfchev's Laboratory warp.
//= 1.5 Added Lasagna ,Para Market ,WOE TE ,Instances and settings [sader1992].
//= 1.5a Fix Bifrost Tower
//============================================================

-	script	Warper	-1,{
function Go; function Disp; function Pick; function Restrict;

// --------------------------------------------------
//	Main Menu:
// --------------------------------------------------

menu	"Last Warp ^777777["+lastwarp$+"]^000000",-,
    	" ~ Towns",Towns,
    	" ~ Dungeons",Dungeons,
    	" ~ Instances",Instances,
    	" ~ Special Areas",Special;

	if (lastwarp$ == "")
		message strcharinfo(0),"You haven't warped anywhere yet.";
	else
		warp lastwarp$,lastwarpx,lastwarpy;
	end;

// ------------------- Functions -------------------
// * Go("<map>",<x>,<y>);
//	~ Warps directly to a map.
//
// * Disp("<Menu Option>",<first option>,<last option>);
// * Pick("<map_prefix>"{,<index offset>});
//	~ Dynamic menu and map selection (auto-numbered).
//	~ Fields and Dungeons must use Disp and Pick Functions.
//
// * Disp("<Option 1>:<Option 2>:<etc.>");
// * Pick("","<map1>","<map2>","<etc.>");
//	~ Manual menu and map selection (listed).
//
// * Restrict("<RE | Pre-RE>"{,<menu option numbers>});
//	~ Only allows map for Renewal or Pre-Renewal modes.
//     If menu option numbers are given, only those maps
//     will be restricted (i.e. not for "Go").
//
// Other notes:
//   ~ Array @c[] holds all (x,y) coordinates.
//   ~ Use @c[2] EXCEPT when maps begin dynamically
//	  at 0: use @c[0] and Pick() offset 1.
// --------------------------------------------------

function Go {
	set lastwarp$, getarg(0);
	set lastwarpx, getarg(1,0);
	set lastwarpy, getarg(2,0);
	warp getarg(0),getarg(1,0),getarg(2,0);
	end;
}
function Disp {
	if (getargcount() < 3)
		set @menu$, getarg(0);
	else {
		set @menu$,"";
		for (set .@i,getarg(1); .@i<=getarg(2); set .@i,.@i+1)
			set @menu$, @menu$+getarg(0)+" "+.@i+":";
	}
	return;
}
function Pick {
	set .@warp_block,@warp_block;
	set @warp_block,0;
	if((@f && .OnlyFirstFld) || (@d && .OnlyFirstDun)){
		set .@select,1;
		if(.@warp_block){
			while(.@warp_block & (1<<.@select)){
				.@select += 1;
			}
		}
	}else{
		set .@select, select(@menu$);
	}
	if (getarg(0) == "") {
		set .@i, .@select;
		set .@map$, getarg(.@i);
	} else {
		set .@i, .@select-getarg(1,0);
		set .@map$, getarg(0)+((.@i<10)?"0":"")+.@i;
	}
	if (.@warp_block & (1<<.@select)) {
		message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
		end;
	}
	set .@x, @c[.@i*2];
	set .@y, @c[.@i*2+1];
	deletearray @c[0],getarraysize(@c);
	@f = false; @d = false;
	Go(.@map$,.@x,.@y);
}
function Restrict {
	if ((getarg(0) == "RE" && !checkre(0)) || (getarg(0) == "Pre-RE" && checkre(0))) {
		if (getarg(1,0)) {
			set @warp_block,0;
			for (set .@i,1; .@i<getargcount(); set .@i,.@i+1)
				set @warp_block, @warp_block | (1<<getarg(.@i));
		} else {
			message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
			end;
		}
	}
	return;
}

// --------------------------------------------------
	Towns:
// --------------------------------------------------
menu	"Prontera",T1, "Alberta",T2, "Aldebaran",T3, "Amatsu",T4, "Ayothaya",T5,
    	"Comodo",T6, "Einbech",T7, "Einbroch",T8, "Geffen",T9, "Gonryun",T10,
		"Hugel",T11, "Izlude",T12, "Jawaii",T13, "Lighthalzen",T14, "Luoyang",T15,
		"Lutie",T16, "Morocc",T17, "Niflheim",T18, "Payon",T19, "Umbala",T20, "Juno",T21;

T1: Go("prontera",155,183);
T2: Go("alberta",28,234);
T3: Go("aldebaran",140,131);
T4: Go("amatsu",198,84);
T5: Go("ayothaya",208,166);
T6: Go("comodo",209,143);
T7: Go("einbech",63,35);
T8: Go("einbroch",64,200);
T9: Go("geffen",119,59);
T10: Go("gonryun",160,120);
T11: Go("hugel",96,145);
T12: Go("izlude",122,93);
T13: Go("jawaii",251,132);
T14: Go("lighthalzen",158,92);
T15: Go("louyang",217,100);
T16: Go("xmas",147,134);
T17: Go("morocc",156,93);
T18: Go("niflheim",202,174);
T19: Go("payon",179,100);
T20: Go("umbala",97,153);
T21: Go("yuno",157,51);

// --------------------------------------------------
	Dungeons:
// --------------------------------------------------
@d = true;
menu	"Abyss Lakes",D1, "Amatsu Dungeon",D2, "Anthell",D3,
    	"Ayothaya Dungeon",D4, "Beach Dungeon",D5, "Bifrost Tower",D42,
    	"Bio Labs",D6, "Brasilis Dungeon",D7, "Byalan Dungeon",D8, "Clock Tower",D9,
    	"Coal Mines",D10, "Culvert",D11, "Cursed Abbey",D12, "Dewata Dungeon",D13,
    	"Einbroch Dungeon",D14, "Gefenia",D15, "Geffen Dungeon",D16,
    	"Glast Heim",D17, "Kunlun Dungeon",D18, "Hidden Dungeon",D19,
    	"Ice Dungeon",D20, "Juperos",D21, "Kiel Dungeon",D22, "Lasagna Dungeon",D23,
		"Luoyang Dungeon",D24, "Magma Dungeon",D25, "Malangdo Dungeon",D26,
		"Moscovia Dungeon",D27, "Nidhogg's Dungeon",D28, "Odin Temple",D29,
		"Orc Dungeon",D30, "Payon Dungeon",D31, "Pyramids",D32, "Rachel Sanctuary",D33,
    	"Scaraba Hole",D34, "Sphinx",D35, "Sunken Ship",D36, "Thanatos Tower",D37,
    	"Thor Volcano",D38, "Toy Factory",D39, "Turtle Dungeon",D40, "Umbala Dungeon",D41;

D1: setarray @c[2],261,272,275,270,116,27;
	Disp("Abyss Lakes",1,3); Pick("abyss_");
D2: setarray @c[2],228,11,34,41,119,14;
	Disp("Amatsu Dungeon",1,3); Pick("ama_dun");
D3: setarray @c[2],35,262,168,170;
	Disp("Anthell",1,2); Pick("anthell");
D4: setarray @c[2],275,19,24,26;
	Disp("Ancient Shrine Maze:Inside Ancient Shrine"); Pick("ayo_dun");
D5: setarray @c[2],266,67,255,244,23,260;
	Disp("Beach Dungeon",1,3); Pick("","beach_dun","beach_dun2","beach_dun3");
D6: Restrict("RE",4);
	setarray @c[2],150,288,150,18,140,134,244,52;
	Disp("Bio Lab",1,4); Pick("lhz_dun");
D7: Restrict("RE");
	setarray @c[2],87,47,262,262;
	Disp("Brasilis Dungeon",1,2); Pick("bra_dun");
D8: Restrict("RE",6);
	setarray @c[0],168,168,253,252,236,204,32,63,26,27,141,187;
	Disp("Byalan Dungeon",1,6); Pick("iz_dun",1);
D9: setarray @c[2],199,159,148,283,65,147,56,155,297,25,127,169,277,178,268,74;
	Disp("Clock Tower 1:Clock Tower 2:Clock Tower 3:Clock Tower 4:Basement 1:Basement 2:Basement 3:Basement 4");
	Pick("","c_tower1","c_tower2","c_tower3","c_tower4","alde_dun01","alde_dun02","alde_dun03","alde_dun04");
D10: setarray @c[2],52,17,381,343,302,262;
	 Disp("Coal Mines",1,3); Pick("mjo_dun");
D11: setarray @c[2],131,247,19,19,180,169,100,92;
	 Disp("Culvert",1,4); Pick("","prt_sewb1","prt_sewb2","prt_sewb3","prt_sewb4");
D12: setarray @c[2],51,14,150,11,120,10;
	 Disp("Cursed Abbey",1,3); Pick("abbey");
D13: Restrict("RE");
	 setarray @c[2],285,160,299,29;
	 Disp("Dewata Dungeon",1,2); Pick("dew_dun");
D14: setarray @c[2],22,14,292,290;
	 Disp("Einbroch Dungeon",1,2); Pick("ein_dun");
D15: setarray @c[2],40,103,203,34,266,168,130,272;
	 Disp("Gefenia",1,4); Pick("gefenia",0);
D16: setarray @c[0],104,99,115,236,106,132,203,200;
	 Disp("Geffen Dungeon",1,4); Pick("gef_dun",1);
D17: setarray @c[2],370,304,199,29,104,25,150,15,157,287,147,15,258,255,108,291,171,283,68,277,156,7,12,7,133,271,224,274,14,70,150,14;
	 Disp("Entrance:Castle 1:Castle 2:Chivalry 1:Chivalry 2:Churchyard:Culvert 1:Culvert 2:Culvert 3:Culvert 4:St. Abbey:Staircase Dungeon:Underground Cave 1:Underground Cave 2:Underground Prison 1:Underground Prison 2");
	 Pick("","glast_01","gl_cas01","gl_cas02","gl_knt01","gl_knt02","gl_chyard","gl_sew01","gl_sew02","gl_sew03","gl_sew04","gl_church","gl_step","gl_dun01","gl_dun02","gl_prison","gl_prison1");
D18: setarray @c[2],153,53,28,113,68,16;
	 Disp("Kunlun Dungeon",1,3); Pick("gon_dun");
D19: setarray @c[2],176,7,93,20,23,8;
	 Disp("Hidden Dungeon",1,3); Pick("prt_maze");
D20: setarray @c[2],157,14,151,155,149,22,33,158;
	 Disp("Ice Dungeon",1,4); Pick("ice_dun");
D21: setarray @c[2],140,51,53,247,37,63,150,285;
	 Disp("Entrance:Juperos 1:Juperos 2:Core");
	 Pick("","jupe_cave","juperos_01","juperos_02","jupe_core");
D22: setarray @c[2],28,226,41,198;
	 Disp("Kiel Dungeon",1,2); Pick("kh_dun");
D23: Restrict("RE");
	 setarray @c[2],24,143,22,171,190,18;
	 Disp("Lasagna Dungeon",1,3); Pick("lasa_dun");
D24: setarray @c[2],218,196,282,20,165,38;
	 Disp("The Royal Tomb:Inside the Royal Tomb:Suei Long Gon"); Pick("lou_dun");
D25: setarray @c[2],126,68,47,30;
	 Disp("Magma Dungeon",1,2); Pick("mag_dun");
D26: Restrict("RE");
	 setarray @c[2],33,230;
	 Disp("Malangdo Dungeon",1,1); Pick("mal_dun");
D27: setarray @c[2],189,48,165,30,32,135;
	 Disp("Moscovia Dungeon",1,3); Pick("mosk_dun");
D28: setarray @c[2],61,239,60,271;
	 Disp("Nidhogg's Dungeon",1,2); Pick("nyd_dun");
D29: setarray @c[2],298,167,224,149,266,280;
	 Disp("Odin Temple",1,3); Pick("odin_tem");
D30: setarray @c[2],32,170,21,185;
	 Disp("Orc Dungeon",1,2); Pick("orcsdun");
D31: setarray @c[0],21,183,19,33,19,63,155,159,201,204;
	 Disp("Payon Dungeon",1,5); Pick("pay_dun",1);
D32: Restrict("RE",7,8);
	 setarray @c[2],192,9,10,192,100,92,181,11,94,96,192,8,94,96,192,8;
	 Disp("Pyramids 1:Pyramids 2:Pyramids 3:Pyramids 4:Basement 1:Basement 2:Basement 1 - Nightmare Mode:Basement 2 - Nightmare Mode");
	 Pick("","moc_pryd01","moc_pryd02","moc_pryd03","moc_pryd04","moc_pryd05","moc_pryd06","moc_prydn1","moc_prydn2");
D33: setarray @c[2],140,11,32,21,8,149,204,218,150,9;
	 Disp("Rachel Sanctuary",1,5); Pick("ra_san");
D34: Restrict("RE");
	 setarray @c[2],364,44,101,141;
	 Disp("Scaraba Hole",1,2); Pick("dic_dun");
D35: setarray @c[2],288,9,149,81,210,54,10,222,100,99;
	 Disp("Sphinx",1,5); Pick("","in_sphinx1","in_sphinx2","in_sphinx3","in_sphinx4","in_sphinx5");
D36: setarray @c[2],69,24,102,27;
	 Disp("Sunken Ship",1,2); Pick("treasure");
D37: setarray @c[2],150,39,150,136,220,158,59,143,62,11,89,221,35,166,93,148,29,107,159,138,19,20,130,52;
	 Disp("Thanatos Tower",1,12); Pick("tha_t");
D38: setarray @c[2],21,228,75,205,34,272;
	 Disp("Thor Volcano",1,3); Pick("thor_v");
D39: setarray @c[2],205,15,129,133;
	 Disp("Toy Factory",1,2); Pick("xmas_dun");
D40: setarray @c[2],154,49,148,261,132,189,100,192;
	 Disp("Entrance:Turtle Dungeon 1:Turtle Dungeon 2:Turtle Dungeon 3"); Pick("tur_dun");
D41: Restrict("Pre-RE",1,2);
	 setarray @c[2],42,31,48,30,204,78;
	 Disp("Carpenter's Shop in the Tree:Passage to a Foreign World:Hvergermil's Fountain");
	 Pick("","um_dun01","um_dun02","yggdrasil01");
D42: Restrict("RE");
	 setarray @c[2],57,13,64,88,45,14,26,23;
	 Disp("Bifrost Tower",1,4); Pick("ecl_tdun");

// --------------------------------------------------
	Instances:
// --------------------------------------------------
menu	"Bakonawa Lake",I1, "Wolfchev's Laboratory",I20;

I1: Restrict("RE");
	Go("ma_scene01",172,175);
I20: Restrict("RE");
	Go("lhz_dun04",148,269);

// --------------------------------------------------
	Special:
// --------------------------------------------------
menu	"Auction Hall",S1, "Turbo Track",S10;

S1: Go("auction_01",22,68);
S10: Go("turbo_room",99,114);

OnInit:
	.Satan_Morocc = true;	//	false will enable moc_fild 4,5,6,8,9,10,14,15 while disable moc_fild 20,21,22 Default is true.
	.OnlyFirstFld = false;	//	true will teleport to the first level of the Fields  Default is false.
	.OnlyFirstDun = false;	//	true will teleport to the first level of the Dungeons  Default is false.
}

// --------------------------------------------------
//	Duplicates:
// --------------------------------------------------
alb2trea,57,70,6	duplicate(Warper)	Warper#tre	811
alberta,28,240,4	duplicate(Warper)	Warper#alb	811
aldebaran,145,118,4	duplicate(Warper)	Warper#alde	811
amatsu,203,87,4	duplicate(Warper)	Warper#ama	811
ayothaya,209,169,6	duplicate(Warper)	Warper#ayo	811
comodo,194,158,4	duplicate(Warper)	Warper#com	811
einbech,59,38,6	duplicate(Warper)	Warper#einbe	811
einbroch,69,202,4	duplicate(Warper)	Warper#einbr	811
gef_fild10,71,339,4	duplicate(Warper)	Warper#orc	811
geffen,124,72,4	duplicate(Warper)	Warper#gef	811
glast_01,372,308,4	duplicate(Warper)	Warper#glh	811
gonryun,162,122,4	duplicate(Warper)	Warper#gon	811
hugel,101,151,4	duplicate(Warper)	Warper#hug	811
izlu2dun,110,92,4	duplicate(Warper)	Warper#izd	811
izlude,134,150,4	duplicate(Warper)	Warper#izl	811	//Pre-RE: (132,120)
jawaii,253,138,4	duplicate(Warper)	Warper#jaw	811
lighthalzen,162,102,4	duplicate(Warper)	Warper#lhz	811
louyang,208,103,6	duplicate(Warper)	Warper#lou	811
manuk,274,146,6	duplicate(Warper)	Warper#man	811
mid_camp,216,288,4	duplicate(Warper)	Warper#mid	811
mjolnir_02,85,364,4	duplicate(Warper)	Warper#mjo	811
moc_ruins,64,164,4	duplicate(Warper)	Warper#moc	811
morocc,159,97,4	duplicate(Warper)	Warper#mor	811
moscovia,229,191,4	duplicate(Warper)	Warper#mos	811
nameless_n,259,213,4	duplicate(Warper)	Warper#nam	811
niflheim,205,179,4	duplicate(Warper)	Warper#nif	811
pay_arche,42,134,4	duplicate(Warper)	Warper#arc	811
payon,182,108,4	duplicate(Warper)	Warper#pay	811
prontera,159,192,4	duplicate(Warper)	Warper#prt	811
prt_fild05,279,223,6	duplicate(Warper)	Warper#cul	811
rachel,135,116,4	duplicate(Warper)	Warper#rac	811
splendide,205,153,4	duplicate(Warper)	Warper#spl	811
thor_camp,249,76,4	duplicate(Warper)	Warper#thor	811
umbala,106,150,3	duplicate(Warper)	Warper#umb	811
veins,214,123,4	duplicate(Warper)	Warper#ve	811
xmas,150,136,6	duplicate(Warper)	Warper#xmas	811
yuno,162,47,4	duplicate(Warper)	Warper#yuno	811
